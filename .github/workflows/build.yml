name: Build
on:
  push:
    branches:
      - 'main'
      - release/*

env:
  REPO:  ${{ secrets.DOCKER_USER }}/test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build Image
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Check buildx
        run: |
          echo "name: ${{ steps.buildx.outputs.name }}"
          echo "status: ${{ steps.buildx.outputs.status }}"
      - name: Login Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get branch
        id: branch
        shell: bash
        run: |
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/*/#} | cut -d/ -f3)"
      - name: Taggin image
        if: ${{steps.branch.outputs.branch != 'release'}}
        shell: bash
        id: vars
        run: |
          echo ${{steps.branch.outputs.branch}}
          echo "::set-output name=tag::$(git rev-parse --short HEAD)"
          echo "::set-output name=author::$(git log -n 1 | grep Author | cut -d: -d' ' -f2,3)"
          git log -n 1 | grep Author | cut -d: -d' ' -f2,3
      # - name: Test
      #   run: |
      #     npm i && npm test
      - name: Docker Push
        uses: docker/build-push-action@v2
        id: docker
        with:
          push: true
          tags: |
            ${{ env.REPO }}:latest
            ${{ env.REPO }}:test
            ${{ secrets.DOCKER_USER }}/test:${{ steps.vars.outputs.tag }}
    outputs: 
      jobStatus: ${{job.status}}

  pre-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: job status value
        run: |
          echo ${{ needs.build.outputs.jobStatus}}